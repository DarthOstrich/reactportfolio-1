{"version":3,"sources":["components/Payment.js","components/Payments.js","components/Chart.js","components/BarChart.js","components/InputContainer.js","App.js","serviceWorker.js","index.js"],"names":["Payment","paymentStyle","display","border","backgroundColor","opacity","fontSize","margin","className","Toast","ToastHeader","this","props","paymentNumber","ToastBody","payment","interestPaid","Component","Payments","payments","map","amount","number","interest","Chart","chartData","labels","datasets","label","data","totalInterest","loanAmount","borderColor","options","title","text","totalPaid","maintainAspectRatio","responsive","BarChart","interestPayments","paymentNumbers","i","length","push","type","InputContainer","styleContainer","padding","Container","fluid","Row","noGutters","Col","InputGroup","onChange","updateLoanAmount","InputGroupAddon","addonType","InputGroupText","style","Input","updateYears","updateInterestRate","xs","Button","onClick","calculatePayment","App","styling","window","innerWidth","flexDirection","height","overflowY","overflowX","state","interestRate","years","numberOfPayments","paymentAmount","input","setState","target","value","duration","newNumberOfPayments","effectiveInterest","v","aAngleN","Math","pow","round","document","getElementById","width","textAlign","flex","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e6d74daf.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Toast, ToastBody, ToastHeader} from 'reactstrap';\r\n\r\nclass Payment extends Component {\r\n\r\n    paymentStyle = {\r\n        display: 'block',\r\n        border: '3px purple solid',\r\n        backgroundColor: 'gray',\r\n        opacity: '.5',\r\n        fontSize: '16px',\r\n        margin: '3px'\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                <div className=\"p-3 my-2 rounded\">\r\n                    <Toast>\r\n                        <ToastHeader>\r\n                            Payment No. {this.props.paymentNumber + 1}\r\n                        </ToastHeader>\r\n                        <ToastBody>\r\n                            Principal: ${this.props.payment - this.props.interestPaid}\r\n                            <br />\r\n                            Interest: ${this.props.interestPaid}\r\n                            <br />\r\n                            Total Payment: ${this.props.payment}\r\n                        </ToastBody>\r\n                    </Toast>\r\n                </div>\r\n            </div>\r\n            // <div style={this.paymentStyle}>\r\n            //     <p style={{margin: '3px'}}>\r\n            //         {this.props.payment}\r\n            //     </p>\r\n            //     <p style={{margin: '3px'}}>\r\n            //         {this.props.paymentNumber + 1}\r\n            //     </p>\r\n            //     <p style={{margin: '3px'}}>\r\n            //         {this.props.interestPaid}\r\n            //     </p>\r\n            // </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Payment;","import React, {Component} from 'react';\r\n\r\nimport Payment from './Payment';\r\n\r\nclass Payments extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.payments.map(payment => (\r\n                    <Payment\r\n                        payment={payment.amount}\r\n                        paymentNumber={payment.number}\r\n                        interestPaid={payment.interest}>\r\n                    </Payment>\r\n                    ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Payments;","import React, {Component} from 'react';\r\nimport {Doughnut} from 'react-chartjs-2';\r\n\r\nclass Chart extends Component {\r\n\r\n    chartData = () => {\r\n        return {\r\n            labels: ['Interest', 'Principal'],\r\n            datasets: [\r\n                {\r\n                    label: 'Total Paid',\r\n                    data: [this.props.totalInterest, this.props.loanAmount],\r\n                    backgroundColor: ['rgba(255, 99, 132, 0.6)','#7A62D5'],\r\n                    borderColor: 'rgb(197, 179, 197)',\r\n\r\n                }\r\n            ]\r\n        }\r\n    } \r\n\r\n    render() {\r\n        return (\r\n            <Doughnut\r\n                data={this.chartData()}\r\n                options={{\r\n                    title: {\r\n                        display: true,\r\n                        text: `Total Paid: ${this.props.totalPaid}`\r\n                    },\r\n                    maintainAspectRatio: false,\r\n                    responsive: true\r\n                }}></Doughnut>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Chart;","import React, {Component} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\nclass BarChart extends Component {\r\n\r\n    chartData = () => {\r\n\r\n        const payments = [];\r\n        const interestPayments = [];\r\n        const paymentNumbers = [];\r\n\r\n        for(let i=0 ; i<this.props.payments.length ; i++) {\r\n            payments.push(this.props.payments[i].amount);\r\n            interestPayments.push(this.props.payments[i].interest);\r\n            paymentNumbers.push(i+1);\r\n        };\r\n\r\n        return {\r\n            labels: paymentNumbers,\r\n            datasets: [\r\n                {\r\n                    label: 'Interest',\r\n                    type: 'line',\r\n                    data: interestPayments,\r\n                    backgroundColor: 'rgba(255, 99, 132, 0.6)',\r\n                    borderColor: 'rgb(197, 179, 197)',\r\n                },\r\n                {\r\n                    label: 'Payments',\r\n                    type: 'bar',\r\n                    data: payments,\r\n                    backgroundColor: '#7A62D5',\r\n                    borderColor: 'rgb(165, 110, 165)',\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Bar\r\n                data={this.chartData()}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    responsive: true}}>\r\n            </Bar>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default BarChart;","import React, {Component} from 'react';\r\nimport {InputGroup, InputGroupText, InputGroupAddon, Input, Container, Row, Col, Button} from 'reactstrap';\r\n\r\nclass InputContainer extends Component {\r\n\r\n    styleContainer = {\r\n        border: 'solid rgba(54, 162, 235, 0.6) 3px',\r\n        padding: '8px',\r\n        margin: '8px'\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid={true}>\r\n                <Row noGutters={true}>\r\n                    <Col>\r\n                        <InputGroup\r\n                            onChange={this.props.updateLoanAmount}>\r\n                            <InputGroupAddon addonType=\"prepend\">\r\n                                <InputGroupText\r\n                                    style={{\r\n                                        backgroundColor: '#9C97AE',\r\n                                        border: '0px'\r\n                                        }}>Loan Amount</InputGroupText>\r\n                            </InputGroupAddon>\r\n                            <Input />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col>\r\n                        <InputGroup\r\n                            onChange={this.props.updateYears}>\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                <InputGroupText\r\n                                    style={{\r\n                                        backgroundColor: '#9C97AE',\r\n                                        border: '0px'\r\n                                        }}>Duration (in years)</InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col>\r\n                        <InputGroup\r\n                            onChange={this.props.updateInterestRate}>\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                <InputGroupText\r\n                                    style={{\r\n                                        backgroundColor: '#9C97AE',\r\n                                        border: '0px'\r\n                                        }}>Interest Rate</InputGroupText>\r\n                            </InputGroupAddon>\r\n                            <Input />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col xs=\"1\">\r\n                        <div>\r\n                            <Button\r\n                                style={{backgroundColor: '#6844ED'}}\r\n                                onClick={this.props.calculatePayment}>\r\n                                    CALCULATE\r\n                            </Button>    \r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputContainer;","import React, {Component} from 'react';\n\nimport Payments from './components/Payments';\nimport Chart from './components/Chart';\nimport BarChart from './components/BarChart';\nimport InputContainer from './components/InputContainer';\n\nimport './App.css';\n\nclass App extends Component {\n\n  styling = () => {\n    let mainContainerStyle;\n    window.innerWidth >= 768 ? mainContainerStyle = {\n      display: 'flex',\n      flexDirection: 'row',\n      height: 'inherit',\n      overflowY: 'hidden',\n      overflowX: 'hidden'\n    } : mainContainerStyle = {};\n\n      return mainContainerStyle;\n  };\n\n  state = {\n    loanAmount: 0,\n    interestRate: null,\n    years: null,\n    numberOfPayments: null,\n    paymentAmount: null,\n    payments: [],\n    totalInterest: null,\n    totalPaid: 0\n  }\n\n  updateLoanAmount = (input) => {\n    this.setState({loanAmount: input.target.value\n    });\n  }\n\n  updateYears = (input) => {\n    this.setState({duration: input.target.value});\n  }\n\n  updateInterestRate = (input) => {\n    this.setState({interestRate: input.target.value});\n  }\n\n  //----- CALCULATIONS -----//\n\n  calculatePayment = () => {\n    const newNumberOfPayments = this.state.duration * 12;\n    //const effectiveInterest = Math.pow(1 + this.state.interestRate / 100,(1 / 12)) - 1;\n    const effectiveInterest = this.state.interestRate/(12 * 100);\n    const v = 1 / (1 + effectiveInterest);\n    const aAngleN = (1 - Math.pow(v,newNumberOfPayments)) / effectiveInterest;\n    const paymentAmount = (Math.round(this.state.loanAmount / aAngleN * 100) / 100);\n\n    //----- CALC PAYMENT/INTEREST ARRAYS -----//\n    const payments = [];\n    for(let i=0; i<newNumberOfPayments; i++) {\n      payments.push({\n          amount: paymentAmount,\n          number: i,\n          interest: Math.round(paymentAmount * (1 - Math.pow(v, newNumberOfPayments - i + 1)) * 100) / 100\n      });\n    };\n\n    //----- SUM INTEREST -----//\n    let totalInterest = 0;\n    for (let i=0 ; i < payments.length ; i++) {\n      totalInterest = totalInterest + payments[i].interest;\n    };\n    totalInterest = Math.round(totalInterest * 100) / 100;\n\n    this.setState({\n      numberOfPayments: newNumberOfPayments,\n      paymentAmount: paymentAmount,\n      payments: payments,\n      totalInterest: totalInterest,\n      totalPaid: this.state.loanAmount + totalInterest});\n  }\n\n  //----- ------- -----//\n  render() {\n    document.getElementById('root').style.height = '100%';\n    document.getElementById('root').style.width = '100vw';\n    return (\n      <div style={{height: '100%'}}>\n        <div style={{\n          padding:'10px',\n          backgroundColor: '#9A8DCC',\n          textAlign: 'center'\n          //borderRadius: '10px 10px 10px 10px'\n          }}>\n            <h1>LOAN CALCULATOR</h1>\n            <InputContainer\n              updateLoanAmount={this.updateLoanAmount}\n              updateYears={this.updateYears}\n              updateInterestRate={this.updateInterestRate}\n              calculatePayment={this.calculatePayment}/>\n        </div>\n        <div\n          style={{height: '87%'}}\n          >\n          <div\n            //style={this.styling()}\n            className='main-container'\n            >\n            <div style={{\n              flex: '1',\n              backgroundColor: '#9C97AE'\n              //borderRadius: '10px 10px 10px 10px'\n              }}>\n            <h4 style={{height: '5%', display: 'block'}}>{this.state.paymentAmount !== null ? `Monthly Payment: ${this.state.paymentAmount}` : ''}</h4>\n            <h4 style={{height: '5%', display: 'block'}}>{this.state.totalInterest !== null ? `Total Interest: ${this.state.totalInterest}` : ''}</h4>\n              <div\n              style={{\n                height: '90%',\n                overflowY: 'auto'\n                }}>\n                <Payments\n                  payments={this.state.payments}>\n                </Payments>\n              </div>\n            </div>\n            <div style={{flex: '3'}}>\n              <div style={{display: 'flex', flexDirection: 'column', height: '100%'}}>\n                <div style={{flex: '1'}}>\n                  <Chart\n                    totalPaid={this.state.totalPaid}\n                    totalInterest={this.state.totalInterest}\n                    loanAmount={this.state.loanAmount}></Chart>\n                </div>\n                <div style={{flex: '1.5'}}>\n                  <BarChart\n                  totalPaid={this.state.totalPaid}\n                  totalInterest={this.state.totalInterest}\n                  loanAmount={this.state.loanAmount}\n                  payments={this.state.payments}></BarChart>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}